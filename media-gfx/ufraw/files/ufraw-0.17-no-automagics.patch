diff -u ufraw-0.17.old/configure.ac ufraw-0.17/configure.ac
--- ufraw-0.17.old/configure.ac	2010-04-01 00:44:24.000000000 +0200
+++ ufraw-0.17/configure.ac	2010-04-03 10:55:58.452702632 +0200
@@ -223,46 +223,114 @@
 AC_CHECK_FUNCS(memmem)
 
 # Check for zlib.
-AC_CHECK_LIB(z, deflate)
-have_zlib=${ac_cv_lib_z_deflate:-no}
+AC_ARG_WITH([zlib],
+  [AS_HELP_STRING([--with-zlib],
+  [build zlib support <:@default=check@:>@])],
+  [],
+  [with_zlib=check])
+
+have_zlib=no
+AS_IF([test "x$with_zlib" != xno],
+  [AC_SEARCH_LIBS([deflate], [z],
+    [have_zlib=yes],
+    [have_zlib=no] ) ] )
 
 # Check for libbz2
-AC_CHECK_LIB(bz2, BZ2_bzReadOpen)
-have_libbz2=${ac_cv_lib_bz2_BZ2_bzReadOpen:-no}
+AC_ARG_WITH([bzip2],
+  [AS_HELP_STRING([--with-bzip2],
+  [build bzip2 support <:@default=check@:>@])],
+  [],
+  [with_bzip2=check])
+
+have_libbz2=no
+AS_IF([test "x$with_bzip2" != xno],
+  [AC_SEARCH_LIBS([BZ2_bzReadOpen], [bz2],
+    [have_libbz2=yes],
+    [have_libbz2=no] ) ] )
 
 # Check for jpeg headers and library.
-AC_CHECK_HEADER(jpeglib.h,
-  AC_CHECK_LIB(jpeg, jpeg_CreateCompress))
-have_jpeg=${ac_cv_lib_jpeg_jpeg_CreateCompress:-no}
+AC_ARG_WITH([jpeg],
+  [AS_HELP_STRING([--with-jpeg],
+  [build jpeg support <:@default=check@:>@])],
+  [],
+  [with_jpeg=check])
+
+have_jpeg=no
+AS_IF([test "x$with_jpeg" != xno],
+  [AC_CHECK_HEADER([jpeglib.h],
+    [AC_SEARCH_LIBS([jpeg_CreateCompress], [jpeg],
+      [have_jpeg=yes],
+      [have_tiff=no] ) ] ) ] )
 
 # Check for tiff headers and library.
-AC_CHECK_HEADER(tiffio.h,
-  AC_CHECK_LIB(tiff, TIFFSetErrorHandler))
-have_tiff=${ac_cv_lib_tiff_TIFFSetErrorHandler:-no}
-
-PKG_CHECK_MODULES(LIBPNG, libpng,
-  [ have_png=yes
-    AC_DEFINE(HAVE_LIBPNG, 1, have the png library) ],
-  [ have_png=no
-    AC_MSG_RESULT($LIBPNG_PKG_ERRORS) ] )
-
-PKG_CHECK_MODULES(CFITSIO, cfitsio,
-  [ have_cfitsio=yes
-    AC_DEFINE(HAVE_LIBCFITSIO, 1, have the cfitsio library) ],
-  [ have_cfitsio=no
-    AC_MSG_RESULT($CFITSIO_PKG_ERRORS) ] )
-
-PKG_CHECK_MODULES(EXIV2, exiv2 >= 0.16,
-  [ have_exiv2=yes
-    AC_DEFINE(HAVE_EXIV2, 1, have the exiv2 library) ],
-  [ have_exiv2=no
-    AC_MSG_RESULT($EXIV2_PKG_ERRORS) ] )
-
-PKG_CHECK_MODULES(LENSFUN, lensfun >= 0.2.5,
-  [ have_lensfun=yes
-    AC_DEFINE(HAVE_LENSFUN, 1, have the lensfun library) ],
-  [ have_lensfun=no
-    AC_MSG_RESULT($LENSFUN_PKG_ERRORS) ] )
+AC_ARG_WITH([tiff],
+  [AS_HELP_STRING([--with-tiff],
+  [build tiff support <:@default=check@:>@])],
+  [],
+  [with_tiff=check])
+
+have_tiff=no
+AS_IF([test "x$with_tiff" != xno],
+  [AC_CHECK_HEADER([tiffio.h],
+    [AC_SEARCH_LIBS([TIFFSetErrorHandler], [tiff],
+      [have_tiff=yes],
+      [have_tiff=no] ) ] ) ] )
+
+AC_ARG_WITH([libpng],
+  [AS_HELP_STRING([--with-libpng],
+  [build libpng support <:@default=check@:>@])],
+  [],
+  [with_libpng=check])
+
+have_png=no
+AS_IF([test "x$with_libpng" != xno],
+  [PKG_CHECK_MODULES(LIBPNG, libpng,
+    [ have_png=yes
+      AC_DEFINE(HAVE_LIBPNG, 1, have the png library) ],
+    [ have_png=no
+      AC_MSG_RESULT($LIBPNG_PKG_ERRORS) ] ) ] )
+
+AC_ARG_WITH([cfitsio],
+  [AS_HELP_STRING([--with-cfitsio],
+  [build fits support @<:@default=check@:>@])],
+  [],
+  [with_cfitsio=check])
+
+have_cfitsio=no
+AS_IF([test "x$with_cfitsio" != xno],
+  [PKG_CHECK_MODULES(CFITSIO, cfitsio,
+    [ have_cfitsio=yes
+      AC_DEFINE(HAVE_LIBCFITSIO, 1, have the cfitsio library) ],
+    [ have_cfitsio=no
+      AC_MSG_RESULT($CFITSIO_PKG_ERRORS) ] ) ] )
+
+AC_ARG_WITH([exiv2],
+  [AS_HELP_STRING([--with-exiv2],
+  [build exiv2 support @<:@default=check@:>@])],
+  [],
+  [with_exiv2=check])
+
+have_exiv2=no
+AS_IF([test "x$with_exiv2" != xno],
+  [PKG_CHECK_MODULES(EXIV2, exiv2 >= 0.16,
+    [ have_exiv2=yes
+      AC_DEFINE(HAVE_EXIV2, 1, have the exiv2 library) ],
+    [ have_exiv2=no
+      AC_MSG_RESULT($EXIV2_PKG_ERRORS) ] ) ] )
+
+AC_ARG_WITH([lensfun],
+  [AS_HELP_STRING([--with-lensfun],
+  [build lensfun support @<:@default=check@:>@])],
+  [],
+  [with_lensfun=check])
+
+have_lensfun=no
+AS_IF([test "x$with_lensfun" != xno],
+  [PKG_CHECK_MODULES(LENSFUN, lensfun >= 0.2.5,
+    [ have_lensfun=yes
+      AC_DEFINE(HAVE_LENSFUN, 1, have the lensfun library) ],
+    [ have_lensfun=no
+      AC_MSG_RESULT($LENSFUN_PKG_ERRORS) ] ) ] )
 
 # UFRAW_CPPFLAGS is added to the preprocessor flags AM_CPPFLAGS,
 # affecting also the C and C++ compilers.
Common subdirectories: ufraw-0.17.old/icons and ufraw-0.17/icons
Common subdirectories: ufraw-0.17.old/po and ufraw-0.17/po
Only in ufraw-0.17: ufraw-0.17-no-automagics.patch
